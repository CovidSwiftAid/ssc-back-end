<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shu.ssc.mapper.CourseCommentMapper">
  <resultMap id="BaseResultMap" type="com.shu.ssc.entity.CourseComment">
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="likes" jdbcType="INTEGER" property="likes" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="comment_mark" jdbcType="INTEGER" property="commentMark" />
  </resultMap>
  <sql id="Base_Column_List">
    comment_id, likes, content, time, student_id, course_id, comment_mark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course_comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course_comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.shu.ssc.entity.CourseComment">
    insert into course_comment (comment_id, likes, content, 
      time, student_id, course_id, 
      comment_mark)
    values (#{commentId,jdbcType=INTEGER}, #{likes,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, 
      #{time,jdbcType=TIMESTAMP}, #{studentId,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, 
      #{commentMark,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.shu.ssc.entity.CourseComment">
    insert into course_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="likes != null">
        likes,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="commentMark != null">
        comment_mark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="likes != null">
        #{likes,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="commentMark != null">
        #{commentMark,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shu.ssc.entity.CourseComment">
    update course_comment
    <set>
      <if test="likes != null">
        likes = #{likes,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="commentMark != null">
        comment_mark = #{commentMark,jdbcType=INTEGER},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shu.ssc.entity.CourseComment">
    update course_comment
    set likes = #{likes,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      student_id = #{studentId,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=INTEGER},
      comment_mark = #{commentMark,jdbcType=INTEGER}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
</mapper>