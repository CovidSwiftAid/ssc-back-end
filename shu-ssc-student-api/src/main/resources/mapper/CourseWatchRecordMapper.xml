<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shu.ssc.mapper.CourseWatchRecordMapper">
  <resultMap id="BaseResultMap" type="com.shu.ssc.entity.CourseWatchRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="watch_time" jdbcType="TIMESTAMP" property="watchTime" />
    <result column="chapter_id" jdbcType="INTEGER" property="chapterId" />
    <result column="video_id" jdbcType="INTEGER" property="videoId" />
    <result column="deleted" jdbcType="INTEGER" property="deleted" />
  </resultMap>
  <sql id="Base_Column_List">
    id, course_id, student_id, watch_time, chapter_id, video_id, deleted
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course_watch_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course_watch_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.shu.ssc.entity.CourseWatchRecord">
    insert into course_watch_record (id, course_id, student_id, 
      watch_time, chapter_id, video_id, 
      deleted)
    values (#{id,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, 
      #{watchTime,jdbcType=TIMESTAMP}, #{chapterId,jdbcType=INTEGER}, #{videoId,jdbcType=INTEGER}, 
      #{deleted,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.shu.ssc.entity.CourseWatchRecord">
    insert into course_watch_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="watchTime != null">
        watch_time,
      </if>
      <if test="chapterId != null">
        chapter_id,
      </if>
      <if test="videoId != null">
        video_id,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="watchTime != null">
        #{watchTime,jdbcType=TIMESTAMP},
      </if>
      <if test="chapterId != null">
        #{chapterId,jdbcType=INTEGER},
      </if>
      <if test="videoId != null">
        #{videoId,jdbcType=INTEGER},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shu.ssc.entity.CourseWatchRecord">
    update course_watch_record
    <set>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="watchTime != null">
        watch_time = #{watchTime,jdbcType=TIMESTAMP},
      </if>
      <if test="chapterId != null">
        chapter_id = #{chapterId,jdbcType=INTEGER},
      </if>
      <if test="videoId != null">
        video_id = #{videoId,jdbcType=INTEGER},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shu.ssc.entity.CourseWatchRecord">
    update course_watch_record
    set course_id = #{courseId,jdbcType=INTEGER},
      student_id = #{studentId,jdbcType=INTEGER},
      watch_time = #{watchTime,jdbcType=TIMESTAMP},
      chapter_id = #{chapterId,jdbcType=INTEGER},
      video_id = #{videoId,jdbcType=INTEGER},
      deleted = #{deleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>